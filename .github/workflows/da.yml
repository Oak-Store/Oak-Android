name: Oak CI Android Debug

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/da.yml
      - oak_client/store/**
      - oak_client/build.gradle.kts
      - oak_client/gradle.properties
      - oak_client/gradlew
      - oak_client/gradlew.bat
      - oak_client/settings.gradle.kts

jobs:
  build_debug_apk_client:
    name: Build Oak Client Debug APK
    runs-on: ubuntu-latest
    env:
      GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      API_FILE: ${{ secrets.API_FILE }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x oak_client/gradlew

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Create google-services.json
        run: echo "$GOOGLE_SERVICES_JSON" > oak_client/store/google-services.json

      - name: Check google-services.json
        run: cat oak_client/store/google-services.json

      - name: Create api_keys.xml
        run: echo "$API_FILE" > oak_client/store/src/main/res/values/api_keys.xml

      - name: Check api_keys.xml
        run: cat oak_client/store/src/main/res/values/api_keys.xml

      - name: Build with Gradle
        id: gradle_build_debug
        run: ./oak_client/gradlew assembleDebug -p oak_client

      - name: Send Build Failure Notification to Telegram
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          disable_web_page_preview: false
          message: |
            *Build Failed!*
            Repository: *${{ github.repository }}*
            Branch: *${{ github.ref_name }}*
            Type: debug
            Commit message: `${{ github.event.head_commit.message }}`
            [Check the logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Upload debug apk
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: store-debug
          path: oak_client/store/build/outputs/apk/debug/store-debug.apk

      - name: Send APK to OakStore CI Telegram
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          document: store/build/outputs/apk/debug/store-debug.apk
          disable_web_page_preview: false
          message: |
            *Build Success!*
            Repository: *${{ github.repository }}*
            Branch: *${{ github.ref_name }}*
            Type: debug
            Commit message: `${{ github.event.head_commit.message }}`
            [Check the logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Send APK to Sketchware Pro Group Telegram
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO_PROGBRS }}
          token: ${{ secrets.TELEGRAM_TOKEN_PROGBRS }}
          format: markdown
          document: oak_client/store/build/outputs/apk/debug/store-debug.apk
          disable_web_page_preview: false
          message: |
            Nova build da *Oak Store!*
            Repository: *${{ github.repository }}*
            Grupo Oficial: @oakcic
            Baixe agora:
  build_debug_apk_console:
    name: Build Oak Console Debug APK
    runs-on: ubuntu-latest
    env:
      GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      API_FILE: ${{ secrets.API_FILE }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x oak_console/gradlew

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Create google-services.json
        run: echo "$GOOGLE_SERVICES_JSON" > oak_console/console/google-services.json

      - name: Check google-services.json
        run: cat oak_console/console/google-services.json

      - name: Create api_keys.xml
        run: echo "$API_FILE" > oak_console/console/src/main/res/values/api_keys.xml

      - name: Check api_keys.xml
        run: cat oak_console/console/src/main/res/values/api_keys.xml

      - name: Build with Gradle
        id: gradle_build_debug
        run: ./oak_console/gradlew assembleDebug -p oak_console

      - name: Send Build Failure Notification to Telegram
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          disable_web_page_preview: false
          message: |
            *Build Failed!*
            Repository: *${{ github.repository }}*
            Branch: *${{ github.ref_name }}*
            Type: debug
            Commit message: `${{ github.event.head_commit.message }}`
            [Check the logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Upload debug apk
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: store-debug
          path: oak_console/console/build/outputs/apk/debug/store-debug.apk

      - name: Send APK to OakStore CI Telegram
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          document: console/build/outputs/apk/debug/store-debug.apk
          disable_web_page_preview: false
          message: |
            *Build Success!*
            Repository: *${{ github.repository }}*
            Branch: *${{ github.ref_name }}*
            Type: debug
            Commit message: `${{ github.event.head_commit.message }}`
            [Check the logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Send APK to Sketchware Pro Group Telegram
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO_PROGBRS }}
          token: ${{ secrets.TELEGRAM_TOKEN_PROGBRS }}
          format: markdown
          document: oak_console/console/build/outputs/apk/debug/store-debug.apk
          disable_web_page_preview: false
          message: |
            Nova build da *Oak Store!*
            Repository: *${{ github.repository }}*
            Grupo Oficial: @oakcic
            Baixe agora:
                      